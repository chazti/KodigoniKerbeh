/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package KodigoNiKerbeh;

import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.print.DocFlavor;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kierby Manalao
 */


public class JInternalFrameAccount extends javax.swing.JInternalFrame {

    /**
     * Creates new form JInternalFrameAccount
     */
    static String sqlcmd = "SELECT id, username, password FROM users WHERE userrole = 1";
    private java.sql.Connection connection;
    public static String ShowTable;
    public JInternalFrameAccount() {
        initComponents();
        createConnection();
        SelectDataIntoTable();
    }
    
    public void createConnection(){
        String url = "jdbc:mysql://localhost:3306/POSLogin";
        String user = "root";
        String password = "73556085283";
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            connection = DriverManager.getConnection(url, user, password);
            
            System.out.println("Database Connected Successfully!");
        }catch (ClassNotFoundException e){
            System.out.println("MtSQL Driver not found!");
            e.printStackTrace();
        }catch(SQLException e){
            System.out.println("Connection failed!");
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jToolBar1 = new javax.swing.JToolBar();
        jButtonAdmin = new javax.swing.JButton();
        jButtonCashier = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jDesktopPaneAccount = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAccount = new javax.swing.JTable();

        jDesktopPane1.setBackground(new java.awt.Color(255, 240, 224));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        jToolBar1.setBackground(new java.awt.Color(241, 157, 145));
        jToolBar1.setRollover(true);

        jButtonAdmin.setForeground(new java.awt.Color(0, 0, 0));
        jButtonAdmin.setText("Admin");
        jButtonAdmin.setFocusable(false);
        jButtonAdmin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAdmin.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdminActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonAdmin);

        jButtonCashier.setForeground(new java.awt.Color(0, 0, 0));
        jButtonCashier.setText("Cashier");
        jButtonCashier.setFocusable(false);
        jButtonCashier.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonCashier.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonCashier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCashierActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonCashier);

        jButtonAdd.setForeground(new java.awt.Color(0, 0, 0));
        jButtonAdd.setText("Add");
        jButtonAdd.setFocusable(false);
        jButtonAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonAdd);

        jButtonDelete.setForeground(new java.awt.Color(0, 0, 0));
        jButtonDelete.setText("Delete");
        jButtonDelete.setEnabled(false);
        jButtonDelete.setFocusable(false);
        jButtonDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonDelete);

        jDesktopPaneAccount.setBackground(new java.awt.Color(255, 240, 224));

        jTableAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAccountMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAccount);

        jDesktopPaneAccount.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPaneAccountLayout = new javax.swing.GroupLayout(jDesktopPaneAccount);
        jDesktopPaneAccount.setLayout(jDesktopPaneAccountLayout);
        jDesktopPaneAccountLayout.setHorizontalGroup(
            jDesktopPaneAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
        );
        jDesktopPaneAccountLayout.setVerticalGroup(
            jDesktopPaneAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDesktopPaneAccount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPaneAccount))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdminActionPerformed
        sqlcmd = "SELECT id, username, password FROM users WHERE userrole = 1";
        SelectDataIntoTable();
    }//GEN-LAST:event_jButtonAdminActionPerformed

    private void jButtonCashierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCashierActionPerformed
        sqlcmd = "SELECT id, username, password FROM users WHERE userrole = 2";
        SelectDataIntoTable();
    }//GEN-LAST:event_jButtonCashierActionPerformed

    public void SelectDataIntoTable(){
        try{
            PreparedStatement preparedStatement;
            
            if (sqlcmd.equals("SELECT id, username, password FROM users WHERE userrole == 1")){
                preparedStatement = connection.prepareStatement(sqlcmd);

            }else{
                preparedStatement = connection.prepareStatement(sqlcmd);  
            }
            
            ResultSet resultset = preparedStatement.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTableAccount.getModel();
            model.setRowCount(0);
            
            while (resultset.next()){
                int id = resultset.getInt ("id");
                String username = resultset.getString("username");
                String password = resultset.getString("password"); 
                model.addRow (new Object[] {id, username, password});            
            }
            resultset.close();
            preparedStatement.close();   
        }
        catch (SQLException e){
            e.printStackTrace();
        }
    }
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        JFrameAddAcount addAcc = new JFrameAddAcount();
        addAcc.setVisible(true);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int selectedRow = jTableAccount.getSelectedRow();
        if (selectedRow != -1){
            int response = JOptionPane.showConfirmDialog(this, "Are you sure want to delete the selected record?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION){
                DefaultTableModel model = (DefaultTableModel) jTableAccount.getModel();
                int id = (int) model.getValueAt (selectedRow, 0);
                
                String sql = "Delete FROM users WHERE id = " + id;
                
                try {
                    PreparedStatement preparedStatement = connection.prepareStatement(sql);
                    preparedStatement.executeUpdate();
                    preparedStatement.close();
                    
                    model.removeRow(selectedRow);
                    SelectDataIntoTable();
                    JOptionPane.showMessageDialog(this, "Record successfully deleted!");
                    
                    jButtonDelete.setEnabled(false);
                }
                catch (SQLException ex){
                    ex.printStackTrace();
                }
            }
        } else{
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        } 
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTableAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAccountMouseClicked
        jButtonDelete.setEnabled(true);
    }//GEN-LAST:event_jTableAccountMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonAdmin;
    private javax.swing.JButton jButtonCashier;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPaneAccount;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAccount;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
